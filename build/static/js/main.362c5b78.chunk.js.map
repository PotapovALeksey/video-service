{"version":3,"sources":["components/Loader/Loader.js","stores/Views.js","middlewars/api.js","stores/Data.js","stores/RootStore.js","router.js","components/App.js","index.js","serviceWorker.js"],"names":["styles","display","margin","position","top","left","transform","Loader","load","css","sizeUnit","size","color","loading","ViewStore","action","bound","this","openedMenu","openedSidebar","openedModal","toJS","observable","computed","CATEGORIES","CATEGORIES_PROMOTED","CATEGORIES_FEATURED","CATEGORIES_LATEST","CATEGORIES_TOP","CATEGORIES_WHATS_NEW","CATEGORIES_FREE","CATEGORIES_POPULAR","CATEGORIES_GAME","CATEGORIES_KOMBAT","CATEGORIES_MUSIC","CATEGORIES_MOVIE","CATEGORIES_NEWS","CATEGORY_ID","category","TOP_CATEGORIES","httpClient","axios","create","baseURL","headers","getToken","a","getTopCategories","token","params","_token","default","limit","post","data","getCategories","getFeaturedVideos","getPromotedVideos","getLatestVideos","getTopVideos","getWhatsNewVideos","getFreeVideos","getPopularVideos","getGameVideos","getKombatVideos","getMusicVideos","getMovieVideos","getNewsVideos","getCategoryID","DataStore","_topCategories","_categories","_featuredVideos","_promotedVideo","_topVideos","_latestVideos","_whatsNewVideos","_freeVideos","_popularVideos","_gameVideos","_kombatVideos","_musicVideos","_movieVideos","_newsVideos","_categoryVideos","_categoryID","runInAction","getPromotedVideo","handleMainData","rootStore","stores","view","path","exact","component","Loadable","loader","configure","enforceActions","App","observer","router","map","route","key","Component","Boolean","window","location","hostname","match","document","getElementById","getAttribute","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.362c5b78.chunk.js","sourcesContent":["import React from 'react';\nimport { FadeLoader } from 'react-spinners';\n\nconst styles = {\n  display: 'block',\n  margin: '0 auto',\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,-50%)',\n};\n\nconst Loader = ({ load }) => (\n  <div>\n    <FadeLoader\n      css={styles}\n      sizeUnit={'px'}\n      size={100}\n      color={'#36D7B7'}\n      loading={load}\n    />\n  </div>\n);\n\nexport default Loader;\n","import { observable, action, computed, toJS } from 'mobx';\n\nclass ViewStore {\n  @observable openedMenu = false;\n  @observable openedSidebar = false;\n  @observable openedModal = false;\n\n  @computed get isOpenedMenu() {\n    return toJS(this.openedMenu);\n  }\n  @computed get isOpenedSidebar() {\n    return toJS(this.openedSidebar);\n  }\n  @computed get isOpenedModal() {\n    return toJS(this.openedModal);\n  }\n\n  @action.bound toggleMenu() {\n    this.openedMenu = !this.openedMenu;\n  }\n  /** toggle left sidebar */\n  @action.bound toggleSidebar() {\n    this.openedSidebar = !this.openedSidebar;\n  }\n  /** modal open*/\n  @action.bound closeModal() {\n    this.openedModal = false;\n  }\n  /** modal close*/\n  @action.bound openModal() {\n    this.openedModal = true;\n  }\n}\n\nexport default ViewStore;\n","import axios from 'axios';\n\nconst CATEGORIES = 'categories';\nconst CATEGORIES_PROMOTED = `${CATEGORIES}/promoted`;\nconst CATEGORIES_FEATURED = `${CATEGORIES}/featured`;\nconst CATEGORIES_LATEST = `${CATEGORIES}/latest`;\nconst CATEGORIES_TOP = `${CATEGORIES}/top`;\nconst CATEGORIES_WHATS_NEW = `${CATEGORIES}/whats-new`;\nconst CATEGORIES_FREE = `${CATEGORIES}/free`;\nconst CATEGORIES_POPULAR = `${CATEGORIES}/popular`;\nconst CATEGORIES_GAME = `${CATEGORIES}/game`;\nconst CATEGORIES_KOMBAT = `${CATEGORIES}/kombat`;\nconst CATEGORIES_MUSIC = `${CATEGORIES}/music`;\nconst CATEGORIES_MOVIE = `${CATEGORIES}/movie`;\nconst CATEGORIES_NEWS = `${CATEGORIES}/news`;\nconst CATEGORY_ID = category => `${CATEGORIES}/${category}`;\n\nconst TOP_CATEGORIES = `top-${CATEGORIES}`;\n\nconst httpClient = axios.create({\n  baseURL: 'http://video.blancweb.com.ua/',\n  headers: { 'Content-Type': 'application/json' },\n});\n\n/** Get token */\nconst getToken = async () => {\n  return await import('../index');\n};\n\n/** GET top category list from API */\nasync function getTopCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(TOP_CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category list from API */\nasync function getCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category fetured videos from API */\nasync function getFeaturedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_FEATURED, params);\n\n  return data;\n}\n\n/** GET category promoted video from API */\nasync function getPromotedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_PROMOTED, params);\n\n  return data;\n}\n\n/** GET category latest videos from API */\nasync function getLatestVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 6,\n  };\n  const data = await httpClient.post(CATEGORIES_LATEST, params);\n\n  return data;\n}\n\n/** GET top-category videos from API */\nasync function getTopVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_TOP, params);\n\n  return data;\n}\n\n/** GET category \"whats-new\" videos from API */\nasync function getWhatsNewVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_WHATS_NEW, params);\n\n  return data;\n}\n\n/** GET category \"free\" videos from API */\nasync function getFreeVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_FREE, params);\n\n  return data;\n}\n\n/** GET category \"popular\" videos from API */\nasync function getPopularVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_POPULAR, params);\n\n  return data;\n}\n\n/** GET category \"game\" videos from API */\nasync function getGameVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_GAME, params);\n\n  return data;\n}\n\n/** GET category \"kombat\" videos from API */\nasync function getKombatVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_KOMBAT, params);\n\n  return data;\n}\n\n/** GET category \"music\" videos from API */\nasync function getMusicVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MUSIC, params);\n\n  return data;\n}\n\n/** GET category \"movie\" videos from API */\nasync function getMovieVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MOVIE, params);\n\n  return data;\n}\n\n/** GET category \"news\" videos from API */\nasync function getNewsVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_NEWS, params);\n\n  return data;\n}\n\n/** GET category ${category} videos from API */\nasync function getCategoryID(category, limit = 20) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORY_ID(category), params);\n\n  return data;\n}\n\nexport {\n  getTopCategories,\n  getCategories,\n  getFeaturedVideos,\n  getPromotedVideos,\n  getLatestVideos,\n  getTopVideos,\n  getWhatsNewVideos,\n  getFreeVideos,\n  getPopularVideos,\n  getGameVideos,\n  getKombatVideos,\n  getMusicVideos,\n  getMovieVideos,\n  getNewsVideos,\n  getCategoryID\n};\n","import { observable, action, computed, toJS, runInAction } from 'mobx';\nimport * as httpClient from '../middlewars/api';\n\nclass DataStore {\n  @observable _topCategories = null;\n  @observable _categories = null;\n  @observable _featuredVideos = null;\n  @observable _promotedVideo = null;\n  @observable _latestVideos = null;\n  @observable _topVideos = null;\n  @observable _whatsNewVideos = null;\n  @observable _freeVideos = null;\n  @observable _popularVideos = null;\n  @observable _gameVideos = null;\n  @observable _kombatVideos = null;\n  @observable _musicVideos = null;\n  @observable _movieVideos = null;\n  @observable _newsVideos = null;\n  @observable _categoryVideos = null;\n\n  @computed get topCategories() {\n    return toJS(this._topCategories);\n  }\n\n  @computed get categories() {\n    return toJS(this._categories);\n  }\n\n  @computed get featuredVideos() {\n    return toJS(this._featuredVideos);\n  }\n\n  @computed get promotedVideo() {\n    return toJS(this._promotedVideo);\n  }\n\n  @computed get topVideos() {\n    return toJS(this._topVideos);\n  }\n\n  @computed get latestVideos() {\n    return toJS(this._latestVideos);\n  }\n\n  @computed get whatsNewVideos() {\n    return toJS(this._whatsNewVideos);\n  }\n\n  @computed get freeVideos() {\n    return toJS(this._freeVideos);\n  }\n\n  @computed get popularVideos() {\n    return toJS(this._popularVideos);\n  }\n\n  @computed get gameVideos() {\n    return toJS(this._gameVideos);\n  }\n\n  @computed get kombatVideos() {\n    return toJS(this._kombatVideos);\n  }\n\n  @computed get musicVideos() {\n    return toJS(this._musicVideos);\n  }\n\n  @computed get movieVideos() {\n    return toJS(this._movieVideos);\n  }\n\n  @computed get newsVideos() {\n    return toJS(this._newsVideos);\n  }\n\n  @computed get categoryVideos() {\n    return toJS(this._categoryVideos);\n  }\n\n  @action.bound\n  clear = async () => {\n    this._topCategories = null;\n    this._categories = null;\n    this._featuredVideos = null;\n    this._promotedVideo = null;\n    this._latestVideos = null;\n    this._topVideos = null;\n    this._whatsNewVideos = null;\n    this._freeVideos = null;\n    this._popularVideos = null;\n    this._gameVideos = null;\n    this._kombatVideos = null;\n    this._musicVideos = null;\n    this._movieVideos = null;\n    this._newsVideos = null;\n    this._categoryID = null;\n  };\n\n  @action.bound\n  getTopCategories = async () => {\n    const { data } = await httpClient.getTopCategories();\n\n    runInAction(() => {\n      this._topCategories = data;\n    });\n  };\n\n  @action.bound\n  getCategories = async () => {\n    const { data } = await httpClient.getCategories();\n\n    runInAction(() => {\n      this._categories = data;\n    });\n  };\n\n  @action.bound\n  getFeaturedVideos = async () => {\n    const { data } = await httpClient.getFeaturedVideos();\n\n    runInAction(() => {\n      this._featuredVideos = data;\n    });\n  };\n\n  @action.bound\n  getPromotedVideo = async () => {\n    const { data } = await httpClient.getPromotedVideos();\n\n    runInAction(() => {\n      this._promotedVideo = data[0];\n    });\n  };\n\n  @action.bound\n  getTopVideos = async () => {\n    const { data } = await httpClient.getTopVideos();\n\n    runInAction(() => {\n      this._topVideos = data;\n    });\n  };\n\n  @action.bound\n  getLatestVideos = async () => {\n    const { data } = await httpClient.getLatestVideos();\n\n    runInAction(() => {\n      this._latestVideos = data;\n    });\n  };\n\n  @action.bound\n  getWhatsNewVideos = async () => {\n    const { data } = await httpClient.getWhatsNewVideos();\n\n    runInAction(() => {\n      this._whatsNewVideos = data;\n    });\n  };\n\n  @action.bound\n  getFreeVideos = async () => {\n    const { data } = await httpClient.getFreeVideos();\n\n    runInAction(() => {\n      this._freeVideos = data;\n    });\n  };\n\n  @action.bound\n  getPopularVideos = async () => {\n    const { data } = await httpClient.getPopularVideos();\n\n    runInAction(() => {\n      this._popularVideos = data;\n    });\n  };\n\n  @action.bound\n  getGameVideos = async () => {\n    const { data } = await httpClient.getGameVideos();\n\n    runInAction(() => {\n      this._gameVideos = data;\n    });\n  };\n\n  @action.bound\n  getKombatVideos = async () => {\n    const { data } = await httpClient.getKombatVideos();\n\n    runInAction(() => {\n      this._kombatVideos = data;\n    });\n  };\n\n  @action.bound\n  getMusicVideos = async () => {\n    const { data } = await httpClient.getMusicVideos();\n\n    runInAction(() => {\n      this._musicVideos = data;\n    });\n  };\n\n  @action.bound\n  getMovieVideos = async () => {\n    const { data } = await httpClient.getMovieVideos();\n\n    runInAction(() => {\n      this._movieVideos = data;\n    });\n  };\n\n  @action.bound\n  getNewsVideos = async () => {\n    const { data } = await httpClient.getNewsVideos();\n\n    runInAction(() => {\n      this._newsVideos = data;\n    });\n  };\n\n  @action.bound\n  getCategoryID = async category => {\n    const { data } = await httpClient.getCategoryID(category);\n\n    runInAction(() => {\n      this._categoryVideos = data;\n    });\n  };\n\n  /** GET data with leftSD, righSD && footer */\n  @action.bound\n  handleMainData = async () => {\n    // legt SD\n    this.getTopCategories();\n    this.getCategories();\n    // right SD\n    this.getPromotedVideo();\n    this.getTopVideos();\n    this.getLatestVideos();\n    // footer\n    this.getPopularVideos();\n  };\n\n  /** GET data \"Home\" page */\n  @action.bound\n  handlGetMainPage = async () => {\n    this.handleMainData();\n\n    // body home page\n    this.getFeaturedVideos();\n    this.getWhatsNewVideos();\n    this.getFreeVideos();\n  };\n\n  /** GET data \"Categories\" page */\n  @action.bound\n  handleGetCategoriesPage = async () => {\n    this.handleMainData();\n    // body categories page\n    this.getWhatsNewVideos();\n    this.getGameVideos();\n    this.getKombatVideos();\n    this.getMovieVideos();\n    this.getMusicVideos();\n    this.getNewsVideos();\n    this.getFreeVideos();\n  };\n\n  /** GET data \"Category\" page */\n  @action.bound\n  handleGetCategoryPage = async category => {\n    this.handleMainData();\n    // body categories page\n    this.getCategoryID(category);\n  };\n}\n\nexport default DataStore;\n","import ViewStore from './Views';\nimport DataStore from './Data';\n\nclass RootStore {\n  constructor() {\n    this.stores = {\n      view: new ViewStore(this),\n      data: new DataStore(this),\n    };\n  }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import Loadable from 'react-loadable';\nimport Loader from './components/Loader/Loader';\n\nconst AsyncHomePage = Loadable({\n  loader: () => import('./pages/Home/Home'),\n  loading: Loader,\n});\n\nconst AsyncCategoryPage = Loadable({\n  loader: () => import('./pages/Category/Category'),\n  loading: Loader,\n});\n\nconst AsyncCategoriesPage = Loadable({\n  loader: () => import('./pages/Categories/Categories'),\n  loading: Loader,\n});\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    component: AsyncHomePage,\n  },\n  {\n    path: '/categories/:id',\n    exact: false,\n    component: AsyncCategoryPage,\n  },\n  {\n    path: '/categories',\n    exact: false,\n    component: AsyncCategoriesPage,\n  },\n];\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport { configure } from 'mobx';\n\nimport router from '../router';\n\nconfigure({ enforceActions: 'observed' });\n\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        {router.map(route => (\n          <Route key={route.path} {...route} />\n        ))}\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport rootStore from './stores/RootStore';\nimport App from './components/App';\nimport './grid.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconfigure({ enforceActions: 'observed' });\n\nlet token;\n\nif (document.getElementById('token')) {\n  token = document.getElementById('token').getAttribute('content');\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={rootStore}>\n        <Route component={App} />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n  );\n}\n\nexport default token;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}