{"version":3,"sources":["components/Loader/Loader.js","stores/Views.js","stores/Data.js","stores/RootStore.js","router.js","components/App.js","index.js","serviceWorker.js","middlewars/api.js"],"names":["styles","display","margin","position","top","left","Loader","load","css","sizeUnit","size","color","loading","ViewStore","action","bound","this","openedMenu","openedSidebar","openedModal","toJS","observable","computed","DataStore","_topCategories","_categories","_featuredVideos","_promotedVideo","_topVideos","_latestVideos","_whatsNewVideos","_freeVideos","_popularVideos","_gameVideos","_kombatVideos","_musicVideos","_movieVideos","_newsVideos","_categoryID","data","pagination","loaded","_categoryVideosAll","_videoByID","_searchData","a","value","httpClient","console","log","runInAction","APIdata","category","page","limit","setDataCategoryId","id","getCategories","getCategoryID","getVideoByID","rootStore","stores","view","AsyncHomePage","Loadable","loader","AsyncCategoryPage","path","exact","component","configure","enforceActions","token","width","App","observer","style","router","map","route","key","Component","Boolean","window","location","hostname","match","document","getElementById","getAttribute","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","BASE_URL","CATEGORIES","CATEGORIES_PROMOTED","CATEGORIES_FEATURED","CATEGORIES_LATEST","CATEGORIES_TOP","CATEGORIES_WHATS_NEW","CATEGORIES_FREE","CATEGORIES_POPULAR","CATEGORIES_GAME","CATEGORIES_KOMBAT","CATEGORIES_MUSIC","CATEGORIES_MOVIE","CATEGORIES_NEWS","CATEGORY_ID","WATCH","VIEW","PICTURES","VIDEOS","VIDEO_ID","LOGIN","SEARCH","TOP_CATEGORIES","CATEGORIES_ALL","PREVIEW_IMG","concatURL","url1","url2","axios","create","baseURL","headers","getToken","getTopCategories","params","_token","default","post","getFeaturedVideos","getPromotedVideos","getLatestVideos","getTopVideos","getWhatsNewVideos","getFreeVideos","getPopularVideos","getGameVideos","getKombatVideos","getMusicVideos","getMovieVideos","getNewsVideos","getCategoryVideosAll","getVideoID","login","email","password","search","get"],"mappings":"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","file":"static/js/main.316b89a5.chunk.js","sourcesContent":["import React from 'react';\nimport { FadeLoader } from 'react-spinners';\n\nconst styles = {\n  display: 'block',\n  margin: '0 auto',\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n};\n\nconst Loader = ({ load }) => (\n  <FadeLoader\n    css={styles}\n    sizeUnit={'px'}\n    size={100}\n    color={'#36D7B7'}\n    loading={load}\n  />\n);\n\nexport default Loader;\n","import { observable, action, computed, toJS } from 'mobx';\n\nclass ViewStore {\n  @observable openedMenu = false;\n  @observable openedSidebar = false;\n  @observable openedModal = false;\n\n  @computed get isOpenedMenu() {\n    return toJS(this.openedMenu);\n  }\n  @computed get isOpenedSidebar() {\n    return toJS(this.openedSidebar);\n  }\n  @computed get isOpenedModal() {\n    return toJS(this.openedModal);\n  }\n\n  @action.bound toggleMenu() {\n    this.openedMenu = !this.openedMenu;\n  }\n  /** toggle left sidebar */\n  @action.bound toggleSidebar() {\n    this.openedSidebar = !this.openedSidebar;\n  }\n  /** close left sidebar */ \n  @action.bound closeSidebar() {\n    this.openedSidebar = false;\n  }\n  /** modal open*/\n  @action.bound closeModal() {\n    this.openedModal = false;\n  }\n  /** modal close*/\n  @action.bound openModal() {\n    this.openedModal = true;\n  }\n}\n\nexport default ViewStore;\n","import { observable, action, computed, toJS, runInAction } from 'mobx';\nimport * as httpClient from '../middlewars/api';\n\nclass DataStore {\n  @observable _topCategories = null;\n  @observable _categories = null;\n  @observable _featuredVideos = null;\n  @observable _promotedVideo = null;\n  @observable _latestVideos = null;\n  @observable _topVideos = null;\n  @observable _whatsNewVideos = null;\n  @observable _freeVideos = null;\n  @observable _popularVideos = null;\n  @observable _gameVideos = null;\n  @observable _kombatVideos = null;\n  @observable _musicVideos = null;\n  @observable _movieVideos = null;\n  @observable _newsVideos = null;\n  @observable _searchData = null;\n  @observable _categoryID = {\n    data: null,\n    loaded: false,\n    pagination: null,\n  };\n  @observable _categoryVideosAll = null;\n  @observable _videoByID = {\n    data: null,\n    loaded: false,\n  };\n\n  @computed get topCategories() {\n    return toJS(this._topCategories);\n  }\n\n  @computed get categories() {\n    return toJS(this._categories);\n  }\n\n  @computed get featuredVideos() {\n    return toJS(this._featuredVideos);\n  }\n\n  @computed get promotedVideo() {\n    return toJS(this._promotedVideo);\n  }\n\n  @computed get topVideos() {\n    return toJS(this._topVideos);\n  }\n\n  @computed get latestVideos() {\n    return toJS(this._latestVideos);\n  }\n\n  @computed get whatsNewVideos() {\n    return toJS(this._whatsNewVideos);\n  }\n\n  @computed get freeVideos() {\n    return toJS(this._freeVideos);\n  }\n\n  @computed get popularVideos() {\n    return toJS(this._popularVideos);\n  }\n\n  @computed get gameVideos() {\n    return toJS(this._gameVideos);\n  }\n\n  @computed get kombatVideos() {\n    return toJS(this._kombatVideos);\n  }\n\n  @computed get musicVideos() {\n    return toJS(this._musicVideos);\n  }\n\n  @computed get movieVideos() {\n    return toJS(this._movieVideos);\n  }\n\n  @computed get newsVideos() {\n    return toJS(this._newsVideos);\n  }\n  /** CATEGORY VIDEO */\n  @computed get categoryID() {\n    return toJS(this._categoryID.data);\n  }\n\n  @computed get categoryIDPagination() {\n    return toJS(this._categoryID.pagination);\n  }\n\n  @computed get categoryIsLoaded() {\n    return toJS(this._categoryID.loaded);\n  }\n\n  @computed get categoryVideosAll() {\n    return toJS(this._categoryVideosAll);\n  }\n\n  @computed get videoByID() {\n    return toJS(this._videoByID.data);\n  }\n\n  @computed get videoIsLoaded() {\n    return toJS(this._videoByID.loaded);\n  }\n\n  @computed get searchData() {\n    return toJS(this._searchData);\n  }\n\n  /** clear all store */\n  @action.bound\n  clear = async () => {\n    this._topCategories = null;\n    this._categories = null;\n    this._featuredVideos = null;\n    this._promotedVideo = null;\n    this._latestVideos = null;\n    this._topVideos = null;\n    this._whatsNewVideos = null;\n    this._freeVideos = null;\n    this._popularVideos = null;\n    this._gameVideos = null;\n    this._kombatVideos = null;\n    this._musicVideos = null;\n    this._movieVideos = null;\n    this._newsVideos = null;\n    this._categoryVideosAll = null;\n    this._searchData = null;\n    this._categoryID = {\n      data: null,\n      loaded: false,\n      pagination: null,\n    };\n    this._videoByID = {\n      data: null,\n      loaded: false,\n    };\n  };\n\n  @action.bound\n  getSearchedData = async value => {\n    const { data } = await httpClient.search(value);\n    console.log(data);\n    runInAction(() => {\n      this._searchData = data;\n    });\n  };\n\n  @action.bound\n  getTopCategories = async () => {\n    const { data } = await httpClient.getTopCategories();\n\n    runInAction(() => {\n      this._topCategories = data;\n    });\n  };\n\n  @action.bound\n  getCategories = async () => {\n    const { data } = await httpClient.getCategories();\n\n    runInAction(() => {\n      this._categories = data;\n    });\n  };\n\n  @action.bound\n  getFeaturedVideos = async () => {\n    const { data } = await httpClient.getFeaturedVideos();\n\n    runInAction(() => {\n      this._featuredVideos = data;\n    });\n  };\n\n  @action.bound\n  getPromotedVideo = async () => {\n    const { data } = await httpClient.getPromotedVideos();\n\n    runInAction(() => {\n      this._promotedVideo = data[0];\n    });\n  };\n\n  @action.bound\n  getTopVideos = async () => {\n    const { data } = await httpClient.getTopVideos();\n\n    runInAction(() => {\n      this._topVideos = data;\n    });\n  };\n\n  @action.bound\n  getLatestVideos = async () => {\n    const { data } = await httpClient.getLatestVideos();\n\n    runInAction(() => {\n      this._latestVideos = data;\n    });\n  };\n\n  @action.bound\n  getWhatsNewVideos = async () => {\n    const { data } = await httpClient.getWhatsNewVideos();\n\n    runInAction(() => {\n      this._whatsNewVideos = data;\n    });\n  };\n\n  @action.bound\n  getFreeVideos = async () => {\n    const { data } = await httpClient.getFreeVideos();\n\n    runInAction(() => {\n      this._freeVideos = data;\n    });\n  };\n\n  @action.bound\n  getPopularVideos = async () => {\n    const { data } = await httpClient.getPopularVideos();\n\n    runInAction(() => {\n      this._popularVideos = data;\n    });\n  };\n\n  @action.bound\n  getGameVideos = async () => {\n    const { data } = await httpClient.getGameVideos();\n\n    runInAction(() => {\n      this._gameVideos = data;\n    });\n  };\n\n  @action.bound\n  getKombatVideos = async () => {\n    const { data } = await httpClient.getKombatVideos();\n\n    runInAction(() => {\n      this._kombatVideos = data;\n    });\n  };\n\n  @action.bound\n  getMusicVideos = async () => {\n    const { data } = await httpClient.getMusicVideos();\n\n    runInAction(() => {\n      this._musicVideos = data;\n    });\n  };\n\n  @action.bound\n  getMovieVideos = async () => {\n    const { data } = await httpClient.getMovieVideos();\n\n    runInAction(() => {\n      this._movieVideos = data;\n    });\n  };\n\n  @action.bound\n  getNewsVideos = async () => {\n    const { data } = await httpClient.getNewsVideos();\n\n    runInAction(() => {\n      this._newsVideos = data;\n    });\n  };\n\n  @action.bound\n  setDataCategoryId = APIdata => {\n    const { data, ...pagination } = APIdata;\n\n    runInAction(() => {\n      this._categoryID.data = data;\n      this._categoryID.loaded = false;\n      this._categoryID.pagination = pagination;\n    });\n  };\n\n  @action.bound\n  getCategoryID = async (category, page, limit = 12) => {\n    const { data } = await httpClient.getCategoryID(category, page, limit);\n\n    this.setDataCategoryId(data);\n  };\n\n  @action.bound\n  getCategoryAddLoading = async (category, page) => {\n    const { data } = await httpClient.getCategoryID(category, page);\n\n    runInAction(() => {\n      this._categoryID.data = [...this._categoryID.data, ...data];\n    });\n  };\n\n  @action.bound\n  toggleLoadedCategory = async () => {\n    runInAction(() => {\n      this._categoryID.loaded = !this._categoryID.loaded;\n    });\n  };\n\n  @action.bound\n  getCategoryVideosAll = async () => {\n    const { data } = await httpClient.getCategoryVideosAll();\n\n    runInAction(() => {\n      this._categoryVideosAll = data;\n    });\n  };\n\n  @action.bound\n  getVideoByID = async id => {\n    const { data } = await httpClient.getVideoID(id);\n\n    runInAction(() => {\n      this._videoByID.data = data;\n      this._videoByID.loaded = false;\n    });\n  };\n\n  @action.bound\n  toggleLoadedVideo = async () => {\n    runInAction(() => {\n      this._videoByID.loaded = !this._videoByID.loaded;\n    });\n  };\n\n  /** GET data \"Home\" page */\n  @action.bound\n  handleGetHomePage = async () => {\n    this.getCategories();\n  };\n\n  /** GET data \"Category\" page */\n  @action.bound\n  handleGetCategoryPage = async (category, page, limit) => {\n    this.getCategories();\n    // body categories page\n    this.getCategoryID(category, page, limit);\n  };\n\n  /** GET data \"Video\" page */\n  @action.bound\n  handleGetVideoPage = async id => {\n    this.getCategories();\n\n    this.getVideoByID(id);\n  };\n}\n\nexport default DataStore;\n","import ViewStore from './Views';\nimport DataStore from './Data';\n\nclass RootStore {\n  constructor() {\n    this.stores = {\n      view: new ViewStore(this),\n      data: new DataStore(this),\n    };\n  }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import Loadable from 'react-loadable';\nimport Loader from './components/Loader/Loader';\n\nconst AsyncHomePage = Loadable({\n  loader: () => import('./pages/Home/Home'),\n  loading: Loader,\n});\n\nconst AsyncCategoryPage = Loadable({\n  loader: () => import('./pages/Category/Category'),\n  loading: Loader,\n});\n\nconst AsyncCategoriesPage = Loadable({\n  loader: () => import('./pages/Categories/Categories'),\n  loading: Loader,\n});\n\nconst AsyncVideoPage = Loadable({\n  loader: () => import('./pages/Video/Video'),\n  loading: Loader,\n});\n\nconst AsyncPicturePage = Loadable({\n  loader: () => import('./pages/Picture/Picture'),\n  loading: Loader,\n});\n\nconst AsyncCardPage = Loadable({\n  loader: () => import('./pages/Card/Card'),\n  loading: Loader,\n});\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    component: AsyncHomePage,\n  },\n  {\n    path: '/category/:id',\n    exact: true,\n    component: AsyncCategoryPage,\n  },\n  // {\n  //   path: '/videos/:id',\n  //   exact: false,\n  //   component: AsyncCategoryPage,\n  // },\n  // {\n  //   path: '/videos',\n  //   exact: false,\n  //   component: AsyncCategoriesPage,\n  // },\n  {\n    path: '/watch/:id',\n    exact: false,\n    component: AsyncCardPage,\n  },\n  // {\n  //   path: '/pictures/:id',\n  //   exact: false,\n  //   component: AsyncCategoryPage,\n  // },\n  // {\n  //   path: '/pictures',\n  //   exact: false,\n  //   component: AsyncCategoriesPage,\n  // },\n  // {\n  //   path: '/view/:id',\n  //   exact: false,\n  //   component: AsyncPicturePage,\n  // },\n];\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport { configure } from 'mobx';\n\nimport router from '../router';\n\nconfigure({ enforceActions: 'observed' });\n\nconst styles = {\n  width: '1100px',\n  margin: '0 auto',\n};\n\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <div style={styles}>\n        <Switch>\n          {router.map(route => (\n            <Route key={route.path} {...route} />\n          ))}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport { configure } from 'mobx';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport rootStore from './stores/RootStore';\nimport App from './components/App';\nimport './grid.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconfigure({ enforceActions: 'observed' });\n\nlet token;\n\nif (document.getElementById('token')) {\n  token = document.getElementById('token').getAttribute('content');\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={rootStore}>\n        <Route component={App} />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n  );\n}\n\nexport default token;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://leatherfighter.com/';\nconst CATEGORIES = 'categories';\nconst CATEGORIES_PROMOTED = `${CATEGORIES}/promoted`;\nconst CATEGORIES_FEATURED = `${CATEGORIES}/featured`;\nconst CATEGORIES_LATEST = `${CATEGORIES}/latest`;\nconst CATEGORIES_TOP = `${CATEGORIES}/top`;\nconst CATEGORIES_WHATS_NEW = `${CATEGORIES}/whats-new`;\nconst CATEGORIES_FREE = `${CATEGORIES}/free`;\nconst CATEGORIES_POPULAR = `${CATEGORIES}/popular`;\nconst CATEGORIES_GAME = `${CATEGORIES}/game`;\nconst CATEGORIES_KOMBAT = `${CATEGORIES}/kombat`;\nconst CATEGORIES_MUSIC = `${CATEGORIES}/music`;\nconst CATEGORIES_MOVIE = `${CATEGORIES}/movie`;\nconst CATEGORIES_NEWS = `${CATEGORIES}/news`;\nconst CATEGORY_ID = category => `${CATEGORIES}/${category}`;\nconst WATCH = 'watch/';\nconst VIEW = 'view/';\nconst PICTURES = 'pictures/';\nconst VIDEOS = 'videos/';\nconst VIDEO_ID = id => `${VIDEOS}${id}`;\nconst LOGIN = 'login';\nconst SEARCH = value => `search?q=${value}`;\n\nconst TOP_CATEGORIES = `top-${CATEGORIES}`;\nconst CATEGORIES_ALL = `${CATEGORIES}-all`;\n\nconst PREVIEW_IMG = `${BASE_URL}preview/`;\n\nconst concatURL = (url1, url2) => `/${url1}${url2}`;\n\nconst httpClient = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n});\n\n/** Get token */\nconst getToken = async () => {\n  return await import('../index');\n};\n\n/** GET top category list from API */\nasync function getTopCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(TOP_CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category list from API */\nasync function getCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category fetured videos from API */\nasync function getFeaturedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_FEATURED, params);\n\n  return data;\n}\n\n/** GET category promoted video from API */\nasync function getPromotedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_PROMOTED, params);\n\n  return data;\n}\n\n/** GET category latest videos from API */\nasync function getLatestVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 6,\n  };\n  const data = await httpClient.post(CATEGORIES_LATEST, params);\n\n  return data;\n}\n\n/** GET top-category videos from API */\nasync function getTopVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_TOP, params);\n\n  return data;\n}\n\n/** GET category \"whats-new\" videos from API */\nasync function getWhatsNewVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_WHATS_NEW, params);\n\n  return data;\n}\n\n/** GET category \"free\" videos from API */\nasync function getFreeVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_FREE, params);\n\n  return data;\n}\n\n/** GET category \"popular\" videos from API */\nasync function getPopularVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_POPULAR, params);\n\n  return data;\n}\n\n/** GET category \"game\" videos from API */\nasync function getGameVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_GAME, params);\n\n  return data;\n}\n\n/** GET category \"kombat\" videos from API */\nasync function getKombatVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_KOMBAT, params);\n\n  return data;\n}\n\n/** GET category \"music\" videos from API */\nasync function getMusicVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MUSIC, params);\n\n  return data;\n}\n\n/** GET category \"movie\" videos from API */\nasync function getMovieVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MOVIE, params);\n\n  return data;\n}\n\n/** GET category \"news\" videos from API */\nasync function getNewsVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_NEWS, params);\n\n  return data;\n}\n\n/** GET category ${category} videos from API */\nasync function getCategoryID(category, page = 1, limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(\n    `${BASE_URL}${CATEGORY_ID(category)}?=page=${page}`,\n    params,\n  );\n\n  return data;\n}\n\n/** GET category videos ALL from API */\nasync function getCategoryVideosAll(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_ALL, params);\n\n  return data;\n}\n\n/** GET VIDEO by ID from API */\nasync function getVideoID(id) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(VIDEO_ID(id), params);\n\n  return data;\n}\n\n/** LOGIN */\nasync function login(email, password) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    email,\n    password,\n  };\n  const data = await httpClient.post(LOGIN, params);\n\n  return data;\n}\n\n/** SEARCH */\nasync function search(value = 'a') {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n  };\n\n  const data = await httpClient.get(SEARCH(value), params);\n\n  return data;\n}\n\nexport {\n  CATEGORIES,\n  CATEGORIES_FEATURED,\n  PREVIEW_IMG,\n  VIDEOS,\n  WATCH,\n  PICTURES,\n  VIEW,\n  concatURL,\n  getTopCategories,\n  getCategories,\n  getFeaturedVideos,\n  getPromotedVideos,\n  getLatestVideos,\n  getTopVideos,\n  getWhatsNewVideos,\n  getFreeVideos,\n  getPopularVideos,\n  getGameVideos,\n  getKombatVideos,\n  getMusicVideos,\n  getMovieVideos,\n  getNewsVideos,\n  getCategoryID,\n  getCategoryVideosAll,\n  getVideoID,\n  login,\n  search\n};\n"],"sourceRoot":""}