{"version":3,"sources":["components/Loader/Loader.js","stores/Views.js","middlewars/api.js","stores/Data.js","stores/RootStore.js","router.js","components/App.js","index.js","serviceWorker.js"],"names":["styles","display","margin","position","top","left","transform","Loader","load","css","sizeUnit","size","color","loading","ViewStore","action","bound","this","openedMenu","openedSidebar","openedModal","toJS","observable","computed","BASE_URL","CATEGORIES","CATEGORIES_PROMOTED","CATEGORIES_FEATURED","CATEGORIES_LATEST","CATEGORIES_TOP","CATEGORIES_WHATS_NEW","CATEGORIES_FREE","CATEGORIES_POPULAR","CATEGORIES_GAME","CATEGORIES_KOMBAT","CATEGORIES_MUSIC","CATEGORIES_MOVIE","CATEGORIES_NEWS","CATEGORY_ID","category","VIDEO_ID","id","TOP_CATEGORIES","CATEGORIES_ALL","httpClient","axios","create","baseURL","headers","getToken","a","getTopCategories","token","params","_token","default","limit","post","data","getCategories","getFeaturedVideos","getPromotedVideos","getLatestVideos","getTopVideos","getWhatsNewVideos","getFreeVideos","getPopularVideos","getGameVideos","getKombatVideos","getMusicVideos","getMovieVideos","getNewsVideos","getCategoryID","page","getCategoryVideosAll","getVideoID","DataStore","_topCategories","_categories","_featuredVideos","_promotedVideo","_topVideos","_latestVideos","_whatsNewVideos","_freeVideos","_popularVideos","_gameVideos","_kombatVideos","_musicVideos","_movieVideos","_newsVideos","_categoryVideos","loaded","_categoryVideosAll","_videoByID","runInAction","console","log","getPromotedVideo","handleMainData","getVideoByID","rootStore","stores","view","path","exact","component","Loadable","loader","configure","enforceActions","App","observer","router","map","route","key","Component","Boolean","window","location","hostname","match","document","getElementById","getAttribute","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.529bee9c.chunk.js","sourcesContent":["import React from 'react';\nimport { FadeLoader } from 'react-spinners';\n\nconst styles = {\n  display: 'block',\n  margin: '0 auto',\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,-50%)',\n};\n\nconst Loader = ({ load }) => (\n  <FadeLoader\n    css={styles}\n    sizeUnit={'px'}\n    size={100}\n    color={'#36D7B7'}\n    loading={load}\n  />\n);\n\nexport default Loader;\n","import { observable, action, computed, toJS } from 'mobx';\n\nclass ViewStore {\n  @observable openedMenu = false;\n  @observable openedSidebar = false;\n  @observable openedModal = false;\n\n  @computed get isOpenedMenu() {\n    return toJS(this.openedMenu);\n  }\n  @computed get isOpenedSidebar() {\n    return toJS(this.openedSidebar);\n  }\n  @computed get isOpenedModal() {\n    return toJS(this.openedModal);\n  }\n\n  @action.bound toggleMenu() {\n    this.openedMenu = !this.openedMenu;\n  }\n  /** toggle left sidebar */\n  @action.bound toggleSidebar() {\n    this.openedSidebar = !this.openedSidebar;\n  }\n  /** modal open*/\n  @action.bound closeModal() {\n    this.openedModal = false;\n  }\n  /** modal close*/\n  @action.bound openModal() {\n    this.openedModal = true;\n  }\n}\n\nexport default ViewStore;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://leatherfighter.com/';\nconst CATEGORIES = 'categories';\nconst CATEGORIES_PROMOTED = `${CATEGORIES}/promoted`;\nconst CATEGORIES_FEATURED = `${CATEGORIES}/featured`;\nconst CATEGORIES_LATEST = `${CATEGORIES}/latest`;\nconst CATEGORIES_TOP = `${CATEGORIES}/top`;\nconst CATEGORIES_WHATS_NEW = `${CATEGORIES}/whats-new`;\nconst CATEGORIES_FREE = `${CATEGORIES}/free`;\nconst CATEGORIES_POPULAR = `${CATEGORIES}/popular`;\nconst CATEGORIES_GAME = `${CATEGORIES}/game`;\nconst CATEGORIES_KOMBAT = `${CATEGORIES}/kombat`;\nconst CATEGORIES_MUSIC = `${CATEGORIES}/music`;\nconst CATEGORIES_MOVIE = `${CATEGORIES}/movie`;\nconst CATEGORIES_NEWS = `${CATEGORIES}/news`;\nconst CATEGORY_ID = category => `${CATEGORIES}/${category}`;\nconst VIDEO_ID = id => `videos/${id}`;\n\nconst TOP_CATEGORIES = `top-${CATEGORIES}`;\nconst CATEGORIES_ALL = `${CATEGORIES}-all`;\n\nconst httpClient = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n});\n\n/** Get token */\nconst getToken = async () => {\n  return await import('../index');\n};\n\n/** GET top category list from API */\nasync function getTopCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(TOP_CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category list from API */\nasync function getCategories() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(CATEGORIES, params);\n\n  return data;\n}\n\n/** GET category fetured videos from API */\nasync function getFeaturedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_FEATURED, params);\n\n  return data;\n}\n\n/** GET category promoted video from API */\nasync function getPromotedVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_PROMOTED, params);\n\n  return data;\n}\n\n/** GET category latest videos from API */\nasync function getLatestVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 6,\n  };\n  const data = await httpClient.post(CATEGORIES_LATEST, params);\n\n  return data;\n}\n\n/** GET top-category videos from API */\nasync function getTopVideos() {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 3,\n  };\n  const data = await httpClient.post(CATEGORIES_TOP, params);\n\n  return data;\n}\n\n/** GET category \"whats-new\" videos from API */\nasync function getWhatsNewVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_WHATS_NEW, params);\n\n  return data;\n}\n\n/** GET category \"free\" videos from API */\nasync function getFreeVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_FREE, params);\n\n  return data;\n}\n\n/** GET category \"popular\" videos from API */\nasync function getPopularVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_POPULAR, params);\n\n  return data;\n}\n\n/** GET category \"game\" videos from API */\nasync function getGameVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_GAME, params);\n\n  return data;\n}\n\n/** GET category \"kombat\" videos from API */\nasync function getKombatVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_KOMBAT, params);\n\n  return data;\n}\n\n/** GET category \"music\" videos from API */\nasync function getMusicVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MUSIC, params);\n\n  return data;\n}\n\n/** GET category \"movie\" videos from API */\nasync function getMovieVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_MOVIE, params);\n\n  return data;\n}\n\n/** GET category \"news\" videos from API */\nasync function getNewsVideos(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_NEWS, params);\n\n  return data;\n}\n\n/** GET category ${category} videos from API */\nasync function getCategoryID(category, page = 1, limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(\n    `${BASE_URL}${CATEGORY_ID(category)}?=page=${page}`,\n    params,\n  );\n\n  return data;\n}\n\n/** GET category videos ALL from API */\nasync function getCategoryVideosAll(limit = 12) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit,\n  };\n  const data = await httpClient.post(CATEGORIES_ALL, params);\n\n  return data;\n}\n\n/** GET VIDEO by ID from API */\nasync function getVideoID(id) {\n  const token = await getToken();\n\n  const params = {\n    _token: token.default,\n    limit: 0,\n  };\n  const data = await httpClient.post(VIDEO_ID(id), params);\n\n  return data;\n}\n\nexport {\n  getTopCategories,\n  getCategories,\n  getFeaturedVideos,\n  getPromotedVideos,\n  getLatestVideos,\n  getTopVideos,\n  getWhatsNewVideos,\n  getFreeVideos,\n  getPopularVideos,\n  getGameVideos,\n  getKombatVideos,\n  getMusicVideos,\n  getMovieVideos,\n  getNewsVideos,\n  getCategoryID,\n  getCategoryVideosAll,\n  getVideoID,\n};\n","import { observable, action, computed, toJS, runInAction } from 'mobx';\nimport * as httpClient from '../middlewars/api';\n\nclass DataStore {\n  @observable _topCategories = null;\n  @observable _categories = null;\n  @observable _featuredVideos = null;\n  @observable _promotedVideo = null;\n  @observable _latestVideos = null;\n  @observable _topVideos = null;\n  @observable _whatsNewVideos = null;\n  @observable _freeVideos = null;\n  @observable _popularVideos = null;\n  @observable _gameVideos = null;\n  @observable _kombatVideos = null;\n  @observable _musicVideos = null;\n  @observable _movieVideos = null;\n  @observable _newsVideos = null;\n  @observable _categoryVideos = {\n    data: null,\n    loaded: false,\n  };\n  @observable _categoryVideosAll = null;\n  @observable _videoByID = null;\n\n  @computed get topCategories() {\n    return toJS(this._topCategories);\n  }\n\n  @computed get categories() {\n    return toJS(this._categories);\n  }\n\n  @computed get featuredVideos() {\n    return toJS(this._featuredVideos);\n  }\n\n  @computed get promotedVideo() {\n    return toJS(this._promotedVideo);\n  }\n\n  @computed get topVideos() {\n    return toJS(this._topVideos);\n  }\n\n  @computed get latestVideos() {\n    return toJS(this._latestVideos);\n  }\n\n  @computed get whatsNewVideos() {\n    return toJS(this._whatsNewVideos);\n  }\n\n  @computed get freeVideos() {\n    return toJS(this._freeVideos);\n  }\n\n  @computed get popularVideos() {\n    return toJS(this._popularVideos);\n  }\n\n  @computed get gameVideos() {\n    return toJS(this._gameVideos);\n  }\n\n  @computed get kombatVideos() {\n    return toJS(this._kombatVideos);\n  }\n\n  @computed get musicVideos() {\n    return toJS(this._musicVideos);\n  }\n\n  @computed get movieVideos() {\n    return toJS(this._movieVideos);\n  }\n\n  @computed get newsVideos() {\n    return toJS(this._newsVideos);\n  }\n  /** CATEGORY VIDEO */\n  @computed get categoryVideos() {\n    return toJS(this._categoryVideos.data);\n  }\n\n  @computed get categoryIsLoaded() {\n    return toJS(this._categoryVideos.loaded);\n  }\n\n  @computed get categoryVideosAll() {\n    return toJS(this._categoryVideosAll);\n  }\n\n  @computed get videoByID() {\n    return toJS(this._videoByID);\n  }\n\n  /** clear all store */\n  @action.bound\n  clear = async () => {\n    this._topCategories = null;\n    this._categories = null;\n    this._featuredVideos = null;\n    this._promotedVideo = null;\n    this._latestVideos = null;\n    this._topVideos = null;\n    this._whatsNewVideos = null;\n    this._freeVideos = null;\n    this._popularVideos = null;\n    this._gameVideos = null;\n    this._kombatVideos = null;\n    this._musicVideos = null;\n    this._movieVideos = null;\n    this._newsVideos = null;\n    this._categoryVideosAll = null;\n    this._categoryVideos = {\n      data: null,\n      loaded: false,\n    };\n    this._videoByID = null;\n  };\n\n  @action.bound\n  getTopCategories = async () => {\n    const { data } = await httpClient.getTopCategories();\n\n    runInAction(() => {\n      this._topCategories = data;\n    });\n  };\n\n  @action.bound\n  getCategories = async () => {\n    const { data } = await httpClient.getCategories();\n\n    runInAction(() => {\n      this._categories = data;\n    });\n  };\n\n  @action.bound\n  getFeaturedVideos = async () => {\n    const { data } = await httpClient.getFeaturedVideos();\n\n    runInAction(() => {\n      this._featuredVideos = data;\n    });\n  };\n\n  @action.bound\n  getPromotedVideo = async () => {\n    const { data } = await httpClient.getPromotedVideos();\n\n    runInAction(() => {\n      this._promotedVideo = data[0];\n    });\n  };\n\n  @action.bound\n  getTopVideos = async () => {\n    const { data } = await httpClient.getTopVideos();\n\n    runInAction(() => {\n      this._topVideos = data;\n    });\n  };\n\n  @action.bound\n  getLatestVideos = async () => {\n    const { data } = await httpClient.getLatestVideos();\n\n    runInAction(() => {\n      this._latestVideos = data;\n    });\n  };\n\n  @action.bound\n  getWhatsNewVideos = async () => {\n    const { data } = await httpClient.getWhatsNewVideos();\n\n    runInAction(() => {\n      this._whatsNewVideos = data;\n    });\n  };\n\n  @action.bound\n  getFreeVideos = async () => {\n    const { data } = await httpClient.getFreeVideos();\n\n    runInAction(() => {\n      this._freeVideos = data;\n    });\n  };\n\n  @action.bound\n  getPopularVideos = async () => {\n    const { data } = await httpClient.getPopularVideos();\n\n    runInAction(() => {\n      this._popularVideos = data;\n    });\n  };\n\n  @action.bound\n  getGameVideos = async () => {\n    const { data } = await httpClient.getGameVideos();\n\n    runInAction(() => {\n      this._gameVideos = data;\n    });\n  };\n\n  @action.bound\n  getKombatVideos = async () => {\n    const { data } = await httpClient.getKombatVideos();\n\n    runInAction(() => {\n      this._kombatVideos = data;\n    });\n  };\n\n  @action.bound\n  getMusicVideos = async () => {\n    const { data } = await httpClient.getMusicVideos();\n\n    runInAction(() => {\n      this._musicVideos = data;\n    });\n  };\n\n  @action.bound\n  getMovieVideos = async () => {\n    const { data } = await httpClient.getMovieVideos();\n\n    runInAction(() => {\n      this._movieVideos = data;\n    });\n  };\n\n  @action.bound\n  getNewsVideos = async () => {\n    const { data } = await httpClient.getNewsVideos();\n\n    runInAction(() => {\n      this._newsVideos = data;\n    });\n  };\n\n  @action.bound\n  getCategoryID = async (category, page) => {\n    const { data } = await httpClient.getCategoryID(category, page);\n\n    runInAction(() => {\n      this._categoryVideos.data = data;\n      this._categoryVideos.loaded = false;\n    });\n  };\n\n  @action.bound\n  getCategoryAddLoading = async (category, page) => {\n    const { data } = await httpClient.getCategoryID(category, page);\n\n    runInAction(() => {\n      this._categoryVideos.data = [...this._categoryVideos.data, ...data];\n    });\n  };\n\n  @action.bound\n  toggleLoadedCategory = async () => {\n    runInAction(() => {\n      this._categoryVideos.loaded = !this._categoryVideos.loaded;\n    });\n  };\n\n  @action.bound\n  getCategoryVideosAll = async () => {\n    const { data } = await httpClient.getCategoryVideosAll();\n\n    runInAction(() => {\n      this._categoryVideosAll = data;\n    });\n  };\n\n  @action.bound\n  getVideoByID = async id => {\n    const { data } = await httpClient.getVideoID(id);\n    console.log(data)\n    runInAction(() => {\n      this._videoByID = data;\n    });\n  };\n\n  /** GET data with leftSD, righSD && footer */\n  @action.bound\n  handleMainData = async () => {\n    // legt SD\n    this.getTopCategories();\n    this.getCategories();\n    // right SD\n    this.getPromotedVideo();\n    this.getTopVideos();\n    this.getLatestVideos();\n    // footer\n    this.getPopularVideos();\n  };\n\n  /** GET data \"Home\" page */\n  @action.bound\n  handlGetMainPage = async () => {\n    this.handleMainData();\n\n    // body home page\n    this.getFeaturedVideos();\n    this.getWhatsNewVideos();\n    this.getFreeVideos();\n  };\n\n  /** GET data \"Categories\" page */\n  @action.bound\n  handleGetCategoriesPage = async () => {\n    this.handleMainData();\n    // body categories page\n    this.getCategoryVideosAll();\n  };\n\n  /** GET data \"Category\" page */\n  @action.bound\n  handleGetCategoryPage = async category => {\n    this.handleMainData();\n    // body categories page\n    this.getCategoryID(category);\n  };\n\n  /** GET data \"Video\" page */\n  @action.bound\n  handleGetVideoPage = async id => {\n    this.handleMainData();\n    // body categories page\n    this.getVideoByID(id);\n  };\n}\n\nexport default DataStore;\n","import ViewStore from './Views';\nimport DataStore from './Data';\n\nclass RootStore {\n  constructor() {\n    this.stores = {\n      view: new ViewStore(this),\n      data: new DataStore(this),\n    };\n  }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import Loadable from 'react-loadable';\nimport Loader from './components/Loader/Loader';\n\nconst AsyncHomePage = Loadable({\n  loader: () => import('./pages/Home/Home'),\n  loading: Loader,\n});\n\nconst AsyncCategoryPage = Loadable({\n  loader: () => import('./pages/Category/Category'),\n  loading: Loader,\n});\n\nconst AsyncCategoriesPage = Loadable({\n  loader: () => import('./pages/Categories/Categories'),\n  loading: Loader,\n});\n\nconst AsyncVideoPage = Loadable({\n  loader: () => import('./pages/Video/Video'),\n  loading: Loader,\n});\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    component: AsyncHomePage,\n  },\n  {\n    path: '/categories/:id',\n    exact: false,\n    component: AsyncCategoryPage,\n  },\n  {\n    path: '/categories',\n    exact: false,\n    component: AsyncCategoriesPage,\n  },\n  {\n    path: '/watch/:id',\n    exact: false,\n    component: AsyncVideoPage,\n  },\n];\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport { configure } from 'mobx';\n\nimport router from '../router';\n\nconfigure({ enforceActions: 'observed' });\n\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        {router.map(route => (\n          <Route key={route.path} {...route} />\n        ))}\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport rootStore from './stores/RootStore';\nimport App from './components/App';\nimport './grid.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconfigure({ enforceActions: 'observed' });\n\nlet token;\n\nif (document.getElementById('token')) {\n  token = document.getElementById('token').getAttribute('content');\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={rootStore}>\n        <Route component={App} />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n  );\n}\n\nexport default token;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}