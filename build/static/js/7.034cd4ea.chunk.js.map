{
  "version": 3,
  "sources": [
    "components/SharedComponents/ButtonLink/ButtonLink.js",
    "components/SharedComponents/LikesAndComments/LikesAndComments.js",
    "components/SharedComponents/ButtonLink/ButtonLink.module.css",
    "components/SharedComponents/LikesAndComments/LikesAndComments.module.css",
    "components/VIdeosSlider/VideosSlider.js",
    "components/VIdeosSlider/VIdeosSlider.module.css",
    "pages/Categories/Categories.module.css",
    "pages/Categories/Categories.js"
  ],
  "names": [
    "ButtonLink",
    "label",
    "link",
    "to",
    "className",
    "styles",
    "button",
    "LikesAndComments",
    "views",
    "comments",
    "iconWrap",
    "icon",
    "faEye",
    "faComments",
    "module",
    "exports",
    "VideosSlider",
    "settings",
    "dots",
    "infinite",
    "speed",
    "slidesToShow",
    "slidesToScroll",
    "responsive",
    "breakpoint",
    "slider",
    "React",
    "createRef",
    "next",
    "current",
    "slickNext",
    "previous",
    "slickPrev",
    "this",
    "props",
    "videos",
    "title",
    "wrap",
    "wrapButton",
    "titleWrap",
    "buttonWrap",
    "slickButton",
    "onClick",
    "faChevronLeft",
    "faChevronRight",
    "slickList",
    "ref",
    "map",
    "video",
    "item",
    "key",
    "imageWrap",
    "img",
    "PREVIEW_IMG",
    "preview_images",
    "WATCH",
    "altImg",
    "name",
    "like",
    "likes_count",
    "duration",
    "imgTitle",
    "text",
    "descr",
    "slice",
    "comments_count",
    "Component",
    "Categories",
    "inject",
    "observer",
    "handleClear",
    "store",
    "stores",
    "data",
    "clear",
    "handleGetAllData",
    "handleGetCategoriesPage",
    "view",
    "isOpenedSidebar",
    "toggleSidebar",
    "openModal",
    "closeModal",
    "isOpenedModal",
    "topCategories",
    "categories",
    "promotedVideo",
    "topVideos",
    "latestVideos",
    "popularVideos",
    "categoryVideosAll",
    "isRender",
    "onClose",
    "content",
    "promoted",
    "populars",
    "latests",
    "popularCategories",
    "load"
  ],
  "mappings": "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",
  "file": "static/js/7.034cd4ea.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './ButtonLink.module.css';\n\nconst ButtonLink = ({ label, link }) => (\n  <NavLink to={link} className={styles.button}>\n    {label}\n  </NavLink>\n);\n\nexport default ButtonLink;\n",
    "import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./LikesAndComments.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst LikesAndComments = ({ views, comments }) => (\n  <>\n    <span className={`${\"miniText\"} ${styles.views} ${styles.iconWrap}`}>\n      <FontAwesomeIcon className={styles.icon} icon={faEye} />\n      {views}\n    </span>\n    <span className={`${\"miniText\"} ${styles.iconWrap}`}>\n      <FontAwesomeIcon className={styles.icon} icon={faComments} />\n      {comments}\n    </span>\n  </>\n);\nLikesAndComments.propTypes = {\n  views: PropTypes.number,\n  comments: PropTypes.number\n};\nexport default LikesAndComments;\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonLink_button__3oQ7m\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"views\":\"LikesAndComments_views__mtUaX\",\"icon\":\"LikesAndComments_icon__qaDwm\",\"iconWrap\":\"LikesAndComments_iconWrap__bGp-a\"};",
    "import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { PREVIEW_IMG, WATCH } from '../../middlewars/api';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../SharedComponents/ButtonLink/ButtonLink';\nimport VideoImage from '../SharedComponents/VideoImage/VideoImage';\nimport LikesAndComments from '../SharedComponents/LikesAndComments/LikesAndComments';\n\nimport styles from './VIdeosSlider.module.css';\n\nexport default class VideosSlider extends React.Component {\n  settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,    \n    slidesToShow: 4,\n    slidesToScroll: 1,\n    responsive: [\n      {\n        breakpoint: 1200,\n        settings: {\n          slidesToShow: 3,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n        },\n      },\n    ],\n  };\n\n  slider = React.createRef();\n\n  next = () => {\n    this.slider.current.slickNext();\n  };\n  previous = () => {\n    this.slider.current.slickPrev();\n  };\n\n  render() {\n    const { videos, title, link } = this.props;\n\n    return (\n      <div className={`${styles.wrap}`}>\n        <div className={styles.wrapButton}>\n          <div className={styles.titleWrap}>\n            <h4 className={styles.title}>{title}</h4>\n            {link && <Button label={'Show all'} link={link} />}\n          </div>\n          <div className={styles.buttonWrap}>\n            <button\n              className={`${styles.slickButton} ${styles.slickPrev}`}\n              onClick={this.previous}\n            >\n              <FontAwesomeIcon icon={faChevronLeft} className={styles.icon} />\n            </button>\n            <button\n              className={`${styles.slickButton} ${styles.slickNext}`}\n              onClick={this.next}\n            >\n              <FontAwesomeIcon icon={faChevronRight} className={styles.icon} />\n            </button>\n          </div>\n        </div>\n\n        <Slider\n          {...this.settings}\n          className={styles.slickList}\n          ref={this.slider}\n        >\n          {(videos || []).map(video => (\n            <div className={styles.item} key={video.link}>\n              <div className={styles.imageWrap}>\n                <VideoImage\n                  img={video.preview_images && video.preview_images[0]}\n                  link={'/' + WATCH + video.link}\n                  altImg={video.name}\n                  like={video.likes_count}\n                  duration={video.duration}\n                />\n                <div>\n                  <NavLink\n                    to={'/' + WATCH + video.link}\n                    className={`imgTitleB ${styles.imgTitle}`}\n                  >\n                    {video.name}\n                  </NavLink>\n                </div>\n                <div className={styles.text}>\n                  {video.descr.slice(0, 83)} ...\n                </div>\n                <LikesAndComments\n                  comments={video.comments_count}\n                  views={video.views}\n                />\n              </div>\n            </div>\n          ))}\n        </Slider>\n      </div>\n    );\n  }\n}\nVideosSlider.propTypes = {\n  videos: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      created_at: PropTypes.string.isRequired,\n      likes_count: PropTypes.number.isRequired,\n      duration: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n};\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VIdeosSlider_wrap__3OvrE\",\"imgTitle\":\"VIdeosSlider_imgTitle__3pGY_\",\"title\":\"VIdeosSlider_title__1VW_p\",\"text\":\"VIdeosSlider_text__1tr74\",\"item\":\"VIdeosSlider_item__3z4ek\",\"slickList\":\"VIdeosSlider_slickList__1rNIf\",\"wrapButton\":\"VIdeosSlider_wrapButton__2cOcR\",\"slickButton\":\"VIdeosSlider_slickButton__2Weti\",\"slickPrev\":\"VIdeosSlider_slickPrev__briJs\",\"titleWrap\":\"VIdeosSlider_titleWrap__2_ZWJ\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Categories_content__3OVRy\"};",
    "import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport VideosSlider from '../../components/VIdeosSlider/VideosSlider';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar';\nimport RightSidebar from '../../components/RightSidebar/RightSidebar';\nimport Loader from '../../components/Loader/Loader';\nimport Modal from '../../components/Modal/Modal';\n\nimport styles from './Categories.module.css';\n\n@inject('store')\n@observer\nclass Categories extends Component {\n  async componentDidMount() {\n    await this.handleClear();\n    this.handleGetAllData();\n  }\n  handleClear = () => this.props.store.stores.data.clear();\n\n  handleGetAllData = () => {\n    const { handleGetCategoriesPage } = this.props.store.stores.data;\n    handleGetCategoriesPage();\n  };\n\n  render() {\n    const {\n      isOpenedSidebar,\n      toggleSidebar,\n      openModal,\n      closeModal,\n      isOpenedModal,\n    } = this.props.store.stores.view;\n\n    const {\n      topCategories,\n      categories,\n      promotedVideo,\n      topVideos,\n      latestVideos,\n      popularVideos,\n      // whatsNewVideos,\n      // gameVideos,\n      // kombatVideos,\n      // movieVideos,\n      // musicVideos,\n      // newsVideos,\n      // freeVideos,\n      categoryVideosAll,\n    } = this.props.store.stores.data;\n\n    const isRender =\n      topCategories &&\n      categories &&\n      promotedVideo &&\n      topVideos &&\n      latestVideos &&\n      popularVideos &&\n      categoryVideosAll;\n    // whatsNewVideos &&\n    // gameVideos &&\n    // kombatVideos &&\n    // movieVideos &&\n    // musicVideos &&\n    // newsVideos &&\n    // freeVideos;\n\n    return isRender ? (\n      <>\n        <Header toggleSidebar={toggleSidebar} openModal={openModal} />\n        {isOpenedModal && <Modal onClose={closeModal} />}\n        <div className=\"wrap\">\n          <LeftSidebar\n            topCategories={topCategories}\n            categories={categories}\n            isOpenedSidebar={isOpenedSidebar}\n          />\n          <div className={styles.content}>\n            {categoryVideosAll.map(({ videos, name, link }) => (\n              <VideosSlider\n                key={link}\n                videos={videos}\n                title={name}\n                link={`categories/${link}`}\n              />\n            ))}\n            {/* <VideosSlider\n              videos={whatsNewVideos}\n              title={\"What's new\"}\n              link={'categories/whats-new'}\n            />\n            <VideosSlider\n              videos={gameVideos}\n              title={'Game'}\n              link={'categories/game'}\n            />\n            <VideosSlider\n              videos={kombatVideos}\n              title={'Kombat'}\n              link={'categories/kombat'}\n            />\n            <VideosSlider\n              videos={movieVideos}\n              title={'Movie'}\n              link={'categories/movie'}\n            />\n            <VideosSlider\n              videos={musicVideos}\n              title={'Music'}\n              link={'categories/music'}\n            />\n            <VideosSlider\n              videos={newsVideos}\n              title={'News'}\n              link={'categories/news'}\n            />\n            <VideosSlider\n              videos={freeVideos}\n              title={'Free'}\n              link={'categories/free'}\n            /> */}\n          </div>\n          <RightSidebar\n            promoted={promotedVideo}\n            latestVideos={latestVideos}\n            topVideos={topVideos}\n          />\n        </div>\n        <Footer\n          populars={popularVideos}\n          latests={latestVideos}\n          categories={categories}\n          popularCategories={topCategories}\n        />\n        {/* <SidebarMobileMenu store={ViewStore} /> */}\n      </>\n    ) : (\n      <Loader load={!isRender} />\n    );\n  }\n}\nexport default Categories;\n"
  ],
  "sourceRoot": ""
}
